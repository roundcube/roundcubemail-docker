name: Build & Test

permissions:
  contents: read

on:
  push:
    branches:
      - '!master'
jobs:
  build-and-testvariants:
    name: Build image variants and run tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        include:
          - variant: 'apache'
            test-files: 'apache-postgres'
            docker-tag: roundcube/roundcubemail:1.5.x-test-apache
            target: 'root'
          - variant: 'fpm'
            test-files: 'fpm-postgres'
            docker-tag: roundcube/roundcubemail:1.5.x-test-fpm
            target: 'root'
          - variant: 'fpm-alpine'
            test-files: 'fpm-postgres'
            docker-tag: roundcube/roundcubemail:1.5.x-test-fpm-alpine
            target: 'root'
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Get docker hub username
        id: creds
        run: echo '::set-output name=username::${{ secrets.DOCKER_PULL_USERNAME }}'
      - name: Login to Docker Hub
        if: steps.creds.outputs.username != ''
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKER_PULL_USERNAME }}
          password: ${{ secrets.DOCKER_PULL_PASSWORD }}

      - name: Build image for "${{ matrix.variant }} / ${{ matrix.target }}"
        run: cd ${{ matrix.variant }} && docker buildx build ./ -t ${{ matrix.docker-tag }} --target ${{ matrix.target }}
      - name: Run tests
        env:
          ROUNDCUBEMAIL_TEST_IMAGE: ${{ matrix.docker-tag }}
          HTTP_PORT: ${{ matrix.http-port || '80' }}
        run: |
          set -exu;
          for testFile in ${{ join(matrix.test-files, ' ') }};
          do
            docker compose -f ./tests/docker-compose.test-${testFile}.yml \
            up --exit-code-from=sut --abort-on-container-exit
          done
